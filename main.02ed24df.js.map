{"version":3,"sources":["scripts/main.js"],"names":["div","document","createElement","waitFor","element","eventName","promise","Promise","resolve","addEventListener","nodeName","id","body","append","className","printMessage","message","paragraph","innerHTML","module","exports"],"mappings":";AAAA,aAEA,IAAMA,EAAMC,SAASC,cAAc,OAKnC,SAASC,EAAQC,EAASC,GAUjBC,OATS,IAAIC,QAAQ,SAACC,GAAY,MAAA,CACvCJ,EAAQK,iBAAiBJ,EAAW,WAClCG,EACE,UAAUH,OAAAA,EACLD,oBAAAA,GAAAA,OAAAA,EAAQM,SAAiBN,UAAAA,OAAAA,EAAQO,UAR9CV,SAASW,KAAKC,OAAOb,GACrBA,EAAIc,UAAY,QAehB,IAAMC,EAAe,SAACC,GACdC,IAAAA,EAAYhB,SAASC,cAAc,KAEzCe,EAAUC,UAAYF,EACtBC,EAAUH,UAAY,UAEtBd,EAAIa,OAAOI,IAGbE,OAAOC,QAAU,CACfjB,QAAAA,EACAY,aAAAA","file":"main.02ed24df.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst div = document.createElement('div');\n\ndocument.body.append(div);\ndiv.className = 'block';\n\nfunction waitFor(element, eventName) {\n  const promise = new Promise((resolve) => [\n    element.addEventListener(eventName, () => {\n      resolve(\n        `It was ${eventName} on the element:`\n        + `${element.nodeName}, id: ${element.id}`\n      );\n    }),\n  ]);\n\n  return promise;\n}\n\nconst printMessage = (message) => {\n  const paragraph = document.createElement('p');\n\n  paragraph.innerHTML = message;\n  paragraph.className = 'message';\n\n  div.append(paragraph);\n};\n\nmodule.exports = {\n  waitFor,\n  printMessage,\n};\n"]}